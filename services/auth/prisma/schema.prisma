// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id       String @id @default(cuid())
  name     String
  users    User[]
  roles    Role[]
}

model Permission {
  id      String @id @default(cuid())
  subject String
  action  String
  roles   Role[]
}

model Role {
  id          String       @id @default(cuid())
  name        String
  hotelId     String
  hotel       Hotel        @relation(fields: [hotelId], references: [id])
  permissions Permission[] 
  users       User[]

  @@unique([hotelId, name])
}

model User {
  id        String  @id @default(cuid())
  email     String
  username  String
  password   String  @map("passwordHash")
  firstName String
  lastName  String
  isActive  Boolean @default(true)
  roleId    String
  hotel     Hotel[]   
  role      Role    @relation(fields: [roleId], references: [id])
  @@unique([email])
  ActionLog ActionLog[]
}

model ActionLog {
  id            String    @id @default(cuid())
  userId        String
  hotelId       String
  service       String    // customer, frontdesk, etc.
  action        String    // guest.create, room.update, etc.
  resourceType  String?   // Guest, Room, Reservation, etc.
  status        String    // SUCCESS, FAILED, DENIED
  errorMessage  String?
  timestamp     DateTime  @default(now())
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}